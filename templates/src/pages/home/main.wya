<template>
	<view wx:if="{{ !!echarts }}" class="g-container">
		<mc-button class="v-home-main__userinfo" bind:tap="handleViewTap">
			<text>前往子包（a-sub）</text>
		</mc-button>
		<view class="v-home-main__userinfo">
			<text>echarts资源由子包(a-echarts)加载</text>
			<text>echarts version: {{ echarts.version }}</text>
			<mc-echarts 
				echarts="{{ echarts }}"
				elementId="chart" 
				options="{{ chartOptions }}" 
				style="width: 40vw; height: 40vw"
			/>
		</view>
		<view class="v-home-main__usermotto" bind:tap="handleChangeByCommit">
			<text>{{ motto }}：</text>
			<text>{{ user }}</text>
		</view>

		<view class="v-home-main__network" bind:tap="handleChangeBy$Request">
			<text>网络请求[$request]: </text>
			<text>{{ user }}</text>
		</view>

		<view class="v-home-main__network" bind:tap="handleChangeByRequest">
			<text>网络请求[request]: </text>
			<text>{{ user }}</text>
		</view>
	</view>
</template>

<script>
import { Utils } from '@wya/mp-utils';
import Mol from '@wya/mol'

const app = getApp();
Mol.page({
	mapState: (state) => {
		return {
			user: state.homeMain.user
		};
	},
	data: {
		motto: '你好，小程序',
		echarts: '',
		chartOptions: {
			backgroundColor: "#ffffff",
			color: ["#37A2DA", "#32C5E9", "#67E0E3", "#91F2DE", "#FFDB5C", "#FF9F7F"],
			series: [{
				label: {
					normal: {
						fontSize: 14
					}
				},
				type: 'pie',
				center: ['50%', '50%'],
				radius: ['40%', '60%'],
				data: [
					{
						value: 55,
						name: '北京'
					}, 
					{
						value: 20,
						name: '武汉'
					}, 
					{
						value: 10,
						name: '杭州'
					}, 
					{
						value: 20,
						name: '广州'
					}, 
					{
						value: 38,
						name: '上海'
					}
				]
			}]
		},
	},

	onLoad() {
		this.setData({
			echarts: Mol.sourceManager.require('echarts')
		});

		this.data.echarts && wx.setNavigationBarTitle({
			title: '首页'
		});
	},

	injector(data) {
		this.config = {...data.config}
		console.log(this.config.configD.d, '----from injector')
	},

	// 事件处理函数
	handleViewTap() {
		wx.navigateTo({
			url: '/a-sub/pages/home/main'
		});
	},

	// 事件处理函数
	handleChangeByCommit() {
		this.$store.commit('HOME_MAIN_CHANGE_USER', { user: Math.random() });
	},

	async handleChangeBy$Request() {
		const res = await this.$request({
			localData: {
				status: 1,
				data: {
					user: '$request'
				}
			}
		});

		this.$store.commit('HOME_MAIN_CHANGE_USER', { user: res.data.user });
	},

	async handleChangeByRequest() {
		await this.request({
			url: 'HOME_MAIN_POST',
			localData: {
				status: 1,
				data: {
					user: 'request'
				}
			}
		});
	}
});
</script>

<style lang="scss">
.v-home-main {
	&__userinfo {
		display: flex;
		flex-direction: column;
		align-items: center;
		&--avatar {
			width: 128rpx;
			height: 128rpx;
			margin: 20rpx;
			border-radius: 50%;
		}
		&--nickname {
			color: #aaa;
		}
	}
	&__usermotto {
		margin-top: 20rpx;
	}

	&__network {
		margin-top: 20rpx;
	}
}
</style>

<config>
{
	"navigationBarTitleText": "",
	"usingComponents": {}
}
</config>